unbind C-b                      # unbind the default prefix key
set -g prefix `                 # use ` as the prefix key 
bind ` send-prefix            # bind Ctrl+a to send the prefix key

# Reload tmux configuration
bind    R     source-file ~/.config/tmux/tmux.conf\; display-message 'Reloaded tmux config'
bind -n M-r   source-file ~/.config/tmux/tmux.conf\; display-message 'Reloaded tmux config'

bind :        command-prompt
bind l        refresh-client
bind r        command-prompt "rename-window %%"
bind z        resize-pane -Z

# Sessions
bind    C-d   detach
bind    S     choose-session
bind -n M-l   choose-session
bind    K     run-shell "~/.config/tmux/bin/kill-clean.sh #{session_name}"
bind    C     command-prompt -p "New session:" "new-session -A -s '%%'" 
bind    C-r   command-prompt -p "Session name" "run-shell 'tmuxp load -y %%'"

# Windows
bind    t     new-window -c "#{pane_current_path}"
bind -n M-t   new-window -c "#{pane_current_path}"
bind -n M-1   select-window -t 1
bind -n M-2   select-window -t 2
bind -n M-3   select-window -t 3
bind -n M-4   select-window -t 4
bind -n M-5   select-window -t 5
bind -n M-6   select-window -t 6
bind -n M-7   select-window -t 7
bind -n M-8   select-window -t 8
bind -n M-9   select-window -t 9
bind    w     list-windows
bind    H     swap-window -t -1\; select-window -t -1
bind    L     swap-window -t +1\; select-window -t +1
# Splits
bind -n M-d   split-window -v -c "#{pane_current_path}"
bind -n M-D   split-window -h -c "#{pane_current_path}"
bind    s     split-window -v -c "#{pane_current_path}"
bind    v     split-window -h -c "#{pane_current_path}"
unbind '"'
unbind %

# Panes
bind    d     kill-pane
bind    x     swap-pane -D
bind    h     select-pane -L
bind    j     select-pane -D
bind    k     select-pane -U
bind    l     select-pane -R
bind    P     set pane-border-status

# Navigation keys for Vim-like behavior
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -n 'C-n' if-shell "$is_vim" 'send-keys C-n' { if -F '#{window_end_flag}' '' 'select-window -n' }
bind-key -n 'C-p' if-shell "$is_vim" 'send-keys C-p' { if 'test #{window_index} -gt #{base-index}' 'select-window -p' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
bind-key -T copy-mode-vi 'C-n' if -F '#{window_end_flag}' '' 'select-window -n'
bind-key -T copy-mode-vi 'C-p' if 'test #{window_index} -gt #{base-index}' 'select-window -p'

# Resize panes
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

bind -n 'M-=' if-shell "$is_vim" 'send-keys M-=' 'next-layout'
